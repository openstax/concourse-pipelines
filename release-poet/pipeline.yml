---
docker-credentials: &docker-credentials
  username: ((ce-dockerhub-id))
  password: ((ce-dockerhub-token))

resources:
- name: source-code
  type: git
  source:
    uri: https://github.com/openstax/poet.git
    branch: main
    tag_filter: '*'

jobs:
  - name: publish-to-open-vsx
    build_log_retention:
      builds: 3
      minimum_succeeded_builds: 1
    public: true
    serial: true
    plan:
      - get: source-code
        trigger: true
        version: every
      - task: get-version
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: alpine/git
              <<: *docker-credentials
          inputs: [{ name: source-code }]
          outputs: [{ name: version }]
          run:
            path: /bin/sh
            args:
              - -cxe
              - |
                git -C source-code tag --points-at HEAD | tee version/version.txt
      - task: gen-new-package-json
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: stedolan/jq
              <<: *docker-credentials
          inputs:
            - name: source-code
            - name: version
          outputs: [{ name: package-json }]
          run:
            path: /bin/bash
            args:
              - -cxe
              - |
                version=$(cat version/version.txt)
                jq --arg version "$version"  '. + {version: $version}' source-code/package.json > package-json/package.json
      - task: publish
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: node
              <<: *docker-credentials
          inputs:
            - name: source-code
            - name: package-json
          params:
            OPENVSX_TOKEN: ((POET-openvsx-token))
            VSCE_TOKEN: ((POET-vsce-token))
          run:
            path: /bin/bash
            args:
              - -cxe
              - |
                cp package-json/package.json source-code/package.json
                cd source-code
                npm install
                npm run build:production
                npm install ovsx
                npx ovsx publish editor-*.vsix -p $OPENVSX_TOKEN
                npx vsce login $(node -p "require('./package.json').publisher") <<< $VSCE_TOKEN && npx vsce publish --no-git-tag-version
