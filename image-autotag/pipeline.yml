---
docker-credentials: &docker-credentials
  username: ((ce-dockerhub-id))
  password: ((ce-dockerhub-token))

ecr-credentials: &ecr-credentials
  aws_secret_access_key: ((ce_ecr_user_access_key))
  aws_access_key_id: ((ce_ecr_user_access_key_id))
  aws_region: us-east-2

image-build-config-common: &image-build-config-common
  platform: linux
  outputs: [{ name: image }]
  caches: [{ path: cache }]
  run: { path: build }

resources:
  - name: image-builder
    type: registry-image
    source:
      repository: concourse/oci-build-task
      tag: latest
      <<: *docker-credentials

  - name: source-code-nebuchadnezzar
    type: git
    source:
      uri: https://github.com/openstax/nebuchadnezzar.git
      branch: master
  - name: docker-hub-image-nebuchadnezzar
    type: registry-image
    source:
      repository: openstax/nebuchadnezzar
      <<: *docker-credentials
  - name: ecr-image-nebuchadnezzar
    type: registry-image
    source:
      repository: nebuchadnezzar
      <<: *ecr-credentials

  - name: source-code-cops
    type: git
    source:
      uri: https://github.com/openstax/output-producer-service.git
      branch: master
  - name: docker-hub-image-cops-frontend
    type: registry-image
    source:
      repository: openstax/output-producer-frontend
      <<: *docker-credentials
  - name: ecr-image-corgi-frontend
    type: registry-image
    source:
      repository: corgi-frontend
      <<: *ecr-credentials
  

  - name: docker-hub-image-cops-backend
    type: registry-image
    source:
      repository: openstax/output-producer-backend
      <<: *docker-credentials
  - name: ecr-image-corgi-backend
    type: registry-image
    source:
      repository: corgi-backend
      <<: *ecr-credentials

  - name: docker-hub-image-cops-bakery-scripts
    type: registry-image
    source:
      repository: openstax/cops-bakery-scripts
      <<: *docker-credentials
  - name: ecr-image-corgi-bakery-scripts
    type: registry-image
    source:
      repository: corgi-bakery-scripts
      <<: *ecr-credentials

  - name: source-code-mathify
    type: git
    source:
      uri: https://github.com/openstax/mathify.git
      branch: master
  - name: docker-hub-image-mathify
    type: registry-image
    source:
      repository: openstax/mathify
      <<: *docker-credentials
  - name: ecr-image-mathify
    type: registry-image
    source:
      repository: mathify
      <<: *ecr-credentials

  - name: source-code-princexml
    type: git
    source:
      uri: https://github.com/openstax/docker-princexml.git
      branch: master
  - name: docker-hub-image-princexml
    type: registry-image
    source:
      repository: openstax/princexml
      <<: *docker-credentials
  - name: ecr-image-princexml
    type: registry-image
    source:
      repository: princexml
      <<: *ecr-credentials

  - name: source-code-cops-resource
    type: git
    source:
      uri: https://github.com/openstax/output-producer-resource.git
      branch: master
  - name: docker-hub-image-cops-resource
    type: registry-image
    source:
      repository: openstax/output-producer-resource
      <<: *docker-credentials
  - name: ecr-image-corgi-resource
    type: registry-image
    source:
      repository: corgi-resource
      <<: *ecr-credentials

  - name: source-code-cnx-recipes
    type: git
    source:
      uri: https://github.com/openstax/cnx-recipes.git
      branch: master
      tag_filter: '*'
  - name: docker-hub-image-cnx-recipes-output
    type: registry-image
    source:
      repository: openstax/cnx-recipes-output
      <<: *docker-credentials
  - name: ecr-image-cnx-recipes-output
    type: registry-image
    source:
      repository: cnx-recipes-output
      <<: *ecr-credentials

  - name: source-code-kitchen-recipes
    type: git
    source:
      uri: https://github.com/openstax/recipes.git
      branch: main
      tag_filter: '*'
  - name: docker-hub-image-kitchen-recipes
    type: registry-image
    source:
      repository: openstax/recipes
      <<: *docker-credentials
  - name: ecr-image-kitchen-recipes
    type: registry-image
    source:
      repository: recipes
      <<: *ecr-credentials

  - name: source-code-xhtml-validator
    type: git
    source:
      uri: https://github.com/openstax/xhtml-validator.git
      branch: trunk
  - name: docker-hub-image-xhtml-validator
    type: registry-image
    source:
      repository: openstax/xhtml-validator
      <<: *docker-credentials
  - name: ecr-image-xhtml-validator
    type: registry-image
    source:
      repository: xhtml-validator
      <<: *ecr-credentials
  
  - name: source-code-richb-press
    type: git
    source:
      uri: https://github.com/openstax/richb-press.git
      branch: main
      submodules: all
  - name: docker-hub-image-richb-press
    type: registry-image
    source:
      repository: openstax/richb-press
      <<: *docker-credentials
  - name: ecr-image-richb-press
    type: registry-image
    source:
      repository: richb-press
      <<: *ecr-credentials
  

jobs:
  - name: build-and-publish-images
    build_log_retention:
      days: 7
      builds: 3
      minimum_succeeded_builds: 1
    public: true
    serial: true
    plan:
      - in_parallel:
        - get: image-builder
        - get: source-code-richb-press
          trigger: true
        
      # Use this task until buildkit + oci-build-task support docker hub auth
      - task: generate-dockerhub-config
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: alpine
              <<: *docker-credentials
          outputs: [{ name: docker-config }]
          params:
            DOCKER_USERNAME: ((ce-dockerhub-id))
            DOCKER_PASSWORD: ((ce-dockerhub-token))
          run:
            path: /bin/sh
            args:
              - -c
              - |
                AUTH="$(echo -n "$DOCKER_USERNAME:$DOCKER_PASSWORD" | base64)"
                cat > docker-config/config.json <<EOF
                { "auths": { "https://index.docker.io/v1/": { "auth": "$AUTH", "email": "devops@openstax.org" }}}
                EOF
      - task: report-versions-and-create-tag
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: alpine/git
              <<: *docker-credentials
          inputs:
            - name: source-code-nebuchadnezzar
            - name: source-code-cops
            - name: source-code-mathify
            - name: source-code-princexml
            - name: source-code-cops-resource
            - name: source-code-cnx-recipes
            - name: source-code-kitchen-recipes
            - name: source-code-xhtml-validator
            - name: source-code-richb-press
          outputs:
            - name: tags
            - name: labels
          run:
            path: /bin/sh
            args:
              - -cxe
              - |
                echo revision_nebuchadnezzar=$(git --git-dir=source-code-nebuchadnezzar/.git rev-parse --short HEAD) >> labels/labels
                echo revision_cops=$(git --git-dir=source-code-cops/.git rev-parse --short HEAD) >> labels/labels
                echo revision_mathify=$(git --git-dir=source-code-mathify/.git rev-parse --short HEAD) >> labels/labels
                echo revision_princexml=$(git --git-dir=source-code-princexml/.git rev-parse --short HEAD) >> labels/labels
                echo revision_cops_resource=$(git --git-dir=source-code-cops-resource/.git rev-parse --short HEAD) >> labels/labels
                echo revision_cnx_recipes=$(git --git-dir=source-code-cnx-recipes/.git rev-parse --short HEAD) >> labels/labels
                echo revision_kitchen_recipes=$(git --git-dir=source-code-kitchen-recipes/.git rev-parse --short HEAD) >> labels/labels
                echo revision_xhtml_validator=$(git --git-dir=source-code-xhtml-validator/.git rev-parse --short HEAD) >> labels/labels
                echo revision_richb_press=$(git --git-dir=source-code-richb-press/.git rev-parse --short HEAD) >> labels/labels
                tag=$(date '+%Y%m%d.%H%M%S')
                echo "$tag" >> tags/tags
                echo master >> tags/tags
                echo trunk >> tags/tags

                cat tags/tags
                cat labels/labels
      
      - task: build-richb-press
        privileged: true
        image: image-builder
        output_mapping: { image: built-image-richb-press }
        config:
          params:
            LABELS_FILE: labels/labels
            DOCKER_CONFIG: docker-config
            CONTEXT: source-code-richb-press
          inputs:
            - name: labels
            - name: docker-config
            - name: source-code-richb-press
            <<: *image-build-config-common

      - in_parallel:
          fail_fast: true
          limit: 2
            - put: docker-hub-image-richb-press
              params: 
                image: built-image-richb-press/image.tar
                additional_tags: tags/tags
              get_params: { skip_download: true }
            - put: ecr-image-richb-press
              params: 
                image: built-image-richb-press/image.tar
                additional_tags: tags/tags
              get_params: { skip_download: true }
