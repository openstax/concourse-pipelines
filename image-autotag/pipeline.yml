---
docker-credentials: &docker-credentials
  username: ((ce-dockerhub-id))
  password: ((ce-dockerhub-token))

image-build-config-common: &image-build-config-common
  platform: linux
  outputs: [{ name: image }]
  caches: [{ path: cache }]
  run: { path: build }

resources:
  - name: image-builder
    type: registry-image
    source:
      repository: vito/oci-build-task
      <<: *docker-credentials

  - name: source-code-nebuchadnezzar
    type: git
    source:
      uri: https://github.com/openstax/nebuchadnezzar.git
      branch: master
  - name: docker-hub-image-nebuchadnezzar
    type: registry-image
    source:
      repository: openstax/nebuchadnezzar
      <<: *docker-credentials

  - name: source-code-cops
    type: git
    source:
      uri: https://github.com/openstax/output-producer-service.git
      branch: master
  - name: docker-hub-image-cops-frontend
    type: registry-image
    source:
      repository: openstax/output-producer-frontend
      <<: *docker-credentials
  - name: docker-hub-image-cops-backend
    type: registry-image
    source:
      repository: openstax/output-producer-backend
      <<: *docker-credentials
  - name: docker-hub-image-cops-bakery-scripts
    type: registry-image
    source:
      repository: openstax/cops-bakery-scripts
      <<: *docker-credentials

  - name: source-code-cnx-easybake
    type: git
    source:
      uri: https://github.com/openstax/cnx-easybake.git
      branch: master
  - name: docker-hub-image-cnx-easybake
    type: registry-image
    source:
      repository: openstax/cnx-easybake
      <<: *docker-credentials

  - name: source-code-mathify
    type: git
    source:
      uri: https://github.com/openstax/mathify.git
      branch: master
  - name: docker-hub-image-mathify
    type: registry-image
    source:
      repository: openstax/mathify
      <<: *docker-credentials

  - name: source-code-princexml
    type: git
    source:
      uri: https://github.com/openstax/docker-princexml.git
      branch: master
  - name: docker-hub-image-princexml
    type: registry-image
    source:
      repository: openstax/princexml
      <<: *docker-credentials

  - name: source-code-cops-resource
    type: git
    source:
      uri: https://github.com/openstax/output-producer-resource.git
      branch: master
  - name: docker-hub-image-cops-resource
    type: registry-image
    source:
      repository: openstax/output-producer-resource
      <<: *docker-credentials

  - name: source-code-cnx-recipes
    type: git
    source:
      uri: https://github.com/openstax/cnx-recipes.git
      branch: master
      tag_filter: '*'
  - name: docker-hub-image-cnx-recipes-output
    type: registry-image
    source:
      repository: openstax/cnx-recipes-output
      <<: *docker-credentials

  - name: source-code-xhtml-validator
    type: git
    source:
      uri: https://github.com/openstax/xhtml-validator.git
      branch: trunk
  - name: docker-hub-image-xhtml-validator
    type: registry-image
    source:
      repository: openstax/xhtml-validator
      <<: *docker-credentials

jobs:
  - name: build-and-publish-images
    build_log_retention:
      days: 7
      builds: 3
      minimum_succeeded_builds: 1
    public: true
    serial: true
    plan:
      - in_parallel:
        - get: image-builder
        - get: source-code-nebuchadnezzar
          trigger: true
        - get: source-code-cops
          trigger: true
        - get: source-code-cnx-easybake
          trigger: true
        - get: source-code-mathify
          trigger: true
        - get: source-code-princexml
          trigger: true
        - get: source-code-cops-resource
          trigger: true
        - get: source-code-cnx-recipes
          trigger: true
        - get: source-code-xhtml-validator
          trigger: true
      - task: report-versions-and-create-tag
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alpine/git
              <<: *docker-credentials
          inputs:
            - { name: source-code-nebuchadnezzar }
            - { name: source-code-cops }
            - { name: source-code-cnx-easybake }
            - { name: source-code-mathify }
            - { name: source-code-princexml }
            - { name: source-code-cops-resource }
            - { name: source-code-cnx-recipes }
            - { name: source-code-xhtml-validator }
          outputs: [{ name: 'tags' }]
          run:
            path: /bin/sh
            args:
              - -cxe
              - |
                tag=$(date '+%Y%m%d.%H%M%S')
                echo "$tag" > tags/tags
                echo master >> tags/tags
                echo trunk >> tags/tags
      - in_parallel:
          fail_fast: true
          limit: 2
          steps:
            - task: build-nebuchadnezzar
              privileged: true
              image: image-builder
              output_mapping: { image: built-image-nebuchadnezzar }
              config:
                params: { CONTEXT: source-code-nebuchadnezzar }
                inputs: [{ name: source-code-nebuchadnezzar }]
                <<: *image-build-config-common
            - task: build-cops-frontend
              privileged: true
              image: image-builder
              output_mapping: { image: built-image-cops-frontend }
              config:
                params: { CONTEXT: source-code-cops/frontend }
                inputs: [{ name: source-code-cops }]
                <<: *image-build-config-common
            - task: build-cops-backend
              privileged: true
              image: image-builder
              output_mapping: { image: built-image-cops-backend }
              config:
                params:
                  CONTEXT: source-code-cops/backend
                  DOCKERFILE: source-code-cops/backend/backend.dockerfile
                inputs: [{ name: source-code-cops }]
                <<: *image-build-config-common
            - task: build-cops-bakery-scripts
              privileged: true
              image: image-builder
              output_mapping: { image: built-image-cops-bakery-scripts }
              config:
                params: { CONTEXT: source-code-cops/bakery/src/scripts }
                inputs: [{ name: source-code-cops }]
                <<: *image-build-config-common
            - task: build-cnx-easybake
              privileged: true
              image: image-builder
              output_mapping: { image: built-image-cnx-easybake }
              config:
                params: { CONTEXT: source-code-cnx-easybake }
                inputs: [{ name: source-code-cnx-easybake }]
                <<: *image-build-config-common
            - task: build-mathify
              privileged: true
              image: image-builder
              output_mapping: { image: built-image-mathify }
              config:
                params: { CONTEXT: source-code-mathify }
                inputs: [{ name: source-code-mathify }]
                <<: *image-build-config-common
            - task: build-princexml
              privileged: true
              image: image-builder
              output_mapping: { image: built-image-princexml }
              config:
                params: { CONTEXT: source-code-princexml }
                inputs: [{ name: source-code-princexml }]
                <<: *image-build-config-common
            - task: build-cops-resource
              privileged: true
              image: image-builder
              output_mapping: { image: built-image-cops-resource }
              config:
                params: { CONTEXT: source-code-cops-resource }
                inputs: [{ name: source-code-cops-resource }]
                <<: *image-build-config-common
            - task: build-cnx-recipes-output
              privileged: true
              image: image-builder
              output_mapping: { image: built-image-cnx-recipes-output }
              config:
                params:
                  CONTEXT: source-code-cnx-recipes
                  DOCKERFILE: source-code-cnx-recipes/outputs.dockerfile
                inputs: [{ name: source-code-cnx-recipes }]
                <<: *image-build-config-common
            - task: build-xthml-validator
              privileged: true
              image: image-builder
              output_mapping: { image: built-image-xhtml-validator }
              config:
                params: { CONTEXT: source-code-xhtml-validator }
                inputs: [{ name: source-code-xhtml-validator }]
                <<: *image-build-config-common
      - in_parallel:
          fail_fast: true
          limit: 2
          steps:
            - put: docker-hub-image-nebuchadnezzar
              params: 
                image: built-image-nebuchadnezzar/image.tar
                additional_tags: tags/tags
              get_params: { skip_download: true }
            - put: docker-hub-image-cops-frontend
              params: 
                image: built-image-cops-frontend/image.tar
                additional_tags: tags/tags
              get_params: { skip_download: true }
            - put: docker-hub-image-cops-backend
              params: 
                image: built-image-cops-backend/image.tar
                additional_tags: tags/tags
              get_params: { skip_download: true }
            - put: docker-hub-image-cops-bakery-scripts
              params: 
                image: built-image-cops-bakery-scripts/image.tar
                additional_tags: tags/tags
              get_params: { skip_download: true }
            - put: docker-hub-image-cnx-easybake
              params: 
                image: built-image-cnx-easybake/image.tar
                additional_tags: tags/tags
              get_params: { skip_download: true }
            - put: docker-hub-image-mathify
              params: 
                image: built-image-mathify/image.tar
                additional_tags: tags/tags
              get_params: { skip_download: true }
            - put: docker-hub-image-princexml
              params: 
                image: built-image-princexml/image.tar
                additional_tags: tags/tags
              get_params: { skip_download: true }
            - put: docker-hub-image-cops-resource
              params: 
                image: built-image-cops-resource/image.tar
                additional_tags: tags/tags
              get_params: { skip_download: true }
            - put: docker-hub-image-cnx-recipes-output
              params: 
                image: built-image-cnx-recipes-output/image.tar
                additional_tags: tags/tags
              get_params: { skip_download: true }
            - put: docker-hub-image-xhtml-validator
              params: 
                image: built-image-xhtml-validator/image.tar
                additional_tags: tags/tags
              get_params: { skip_download: true }
